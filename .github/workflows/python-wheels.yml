name: Build Python wheels

on:
    push:
      branches: [main]
      tags: 'v*'
    workflow_dispatch:

jobs:
  build-python-wheels:
    name: Build wheels on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
            ubuntu-latest,
            windows-latest,
            macos-13, # latest non-beta version
        ] # see https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        python-version: [
            '3.10',
            '3.11',
            '3.12',
        ] # see https://devguide.python.org/versions/

    steps:
      - uses: actions/checkout@v4

      - name: Set up rust
        uses: dtolnay/rust-toolchain@stable
        with:
            toolchain: stable

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install maturin
        run: python -m pip install maturin

      - name: Build source distribution # do this only once
        run: |
            cd lakers-python
            ln -s ../examples ./examples # make sure examples are available in sdist (because examples/coap is in default-members)
            maturin build --sdist --out wheelhouse
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'

      - name: Build wheels
        run: |
            cd lakers-python
            maturin build --release --out wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.os }}-python-${{ matrix.python-version }}
          path: ./lakers-python/wheelhouse/lakers_python*

  release:
    runs-on: ubuntu-latest
    needs: [build-python-wheels]
    if: >-
      github.event_name == 'push' &&
      startsWith(github.event.ref, 'refs/tags')

    steps:
    - uses: actions/checkout@v4

    - name: set up python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - run: pip install -U twine

    - name: get wheelhouse artifacts
      uses: actions/download-artifact@v4
      with:
        path: wheelhouse

    - run: ls -lah ./wheelhouse/*/lakers_python*
    - run: twine check ./wheelhouse/*/lakers_python*

    - name: upload to pypi
      run: twine upload ./wheelhouse/*/lakers_python*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_UPLOAD_TOKEN }}
